#1  -  什么是window ：没有被嵌入到任何其他widgets中的widgets，叫做window。即没有父实例的widgets就是window

#2  -  QT提供所有UI元素，要么是QWidget的子类，要么和QWidget的子类有关系

#3  -  QMainWindow是QWidget的子类，用来创建主窗体
       QDockWidget是Qwidget的子类，用来创建停靠窗体，当我们拖动某个窗体的时候，可以把窗体停靠到这个位置，比如sourceinsight中的窗体都可以拖动然后停靠的到上下左右的位置

#4  -  QT中，多使用QMainWindow和QDialog的子类作为主窗口类型

#5  -  Any QWidget that has no parent will become a window, and will on most platforms be listed in the desktop's task bar. 
        任何没有parent的widget都会变成window，变成window后，在大多数平台中都会被罗列在任务栏中

#6  -  大部分情况下，一个应用程序只要有一个window，即“主window”

#7  -  如果，某个QWidget有parent，又想让他成为window，那么只需要把其Window标志位置位即可。但是这样实现的窗口叫做“次window”，次window在任务栏中是不显示的

            QMainWindow就是通过在构造函数中设置Window标志位来把自己作为window的

#8  -  一般情况下都是使用QMainWindow作为“主window”

#9  -  一般情况下都是使用DialogWindows作为“次window”

(*)#10 -  Creating designs visually and reading the code generated by uic is a great way to learn Qt!
            使用designer创建ui，然后阅读配套生成的uic文件，这是比较推荐的一种学习方法

#11 -  Widget是GUI应用的基础和核心。任何GUI都是一个widget，任何widget(按键，弹窗，window等等)都是Qwidget的子类，又任何Qwidget都是QObject的子类

#12 -  
       A typical main() function in main.cpp looks like this:

        #include <QtWidgets>

          // Include header files for application components.
            // ...

        int main(int argc, char *argv[])
        {
            QApplication app(argc, argv);

            // Set up and show widgets.
            // ...

            return app.exec();
        }

        说明：首先创建一个QApplication，用来接收命令行参数，然后显示所有的widgets，最后调用exec进入qtcore以监视事件。

        具体案例见：
Qt 5.6
Qt Widgets
Widgets Tutorial - Creating a Window


Qt 5.6
Qt Widgets
Widgets Tutorial - Child Widgets


Qt 5.6
Qt Widgets
Widgets Tutorial - Using Layouts



Qt 5.6
Qt Widgets
Widgets Tutorial - Nested Layouts



Qt 5.6
Qt Widgets
Qt Widgets Examples




小结：1.QWidget是父类，QMainWindow和QDialog是子类
      2.QMainWindow一般配合几个固定的类使用，具体见Qt 5.6/Qt Widgets/Application Main Window
      3.QDialog一般作为辅助功能配合QMainWindow使用，Qdialog是一个通用类，其有很多分工明确的子类，在使用中也多使用这些子类，具体见Qt 5.6/Qt Widgets/Dialog Windows
      4.一般情况下，QMainWindow + 配合类 + Qdialog的具体实现，即可满足需求




       
