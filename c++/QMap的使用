QMap的遍历：

for(QMap<QString , Addrinfo *>::Iterator iter = map.begin()
; iter != map.end(); iter ++)
{
qDebug() << "key:" << iter.key()<< "value:" << iter.value() << "\n";
}



如果QMap中已经有 key1， 那么再往map中使用insert和operator[],则会覆盖原来的值。

如果想让一个key对应多个值，那么可以使用insertMulti代替insert，这样的话就可以实现不覆盖原值。那么在访问的时候可以这样：
  QList<int> values = map.values("plenty");
  for (int i = 0; i < values.size(); ++i)
      cout << values.at(i) << endl;
可见，是通过QList来存储 “一个key多个value”

